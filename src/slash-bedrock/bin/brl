#!/bin/sh
# shellcheck shell=sh
# Copyright 2019 Jacob Hrbek <kreyren@rixotstudio.cz>
# Distributed under the terms of the GNU General Public License v3 (https://www.gnu.org/licenses/gpl-3.0.en.html) or later
# Based in part upon 'brl-fetch' from Bedrock Linux (https://github.com/bedrocklinux/bedrocklinux-userland/blob/master/src/slash-bedrock/bin/brl), which is:
# 		Copyright 2016-2019 Daniel Thau <danthau@bedrocklinux.org> as GPLv2

# shellcheck source=src/slash-bedrock/lib/shell/common-code.sh
. /bedrock/lib/shell/common-code.sh

filename="${0##*/}"

print_help() {
	printf '%s\n' "Usage: ${color_cmd}brl ${color_sub}<command> [arguments]${color_norm}

${color_bedrock}Bedrock Linux${color_norm} system management and introspection.

Common commands:
  ${color_cmd}strat     ${color_norm}Run specified ${color_term}stratum${color_norm}'s executable
  ${color_cmd}          ${color_norm}Note: ${color_cmd}\`strat\`${color_norm} is available without the ${color_cmd}\`brl\`${color_norm} prefix
  ${color_cmd}list      ${color_norm}List ${color_term}strata${color_norm}
  ${color_cmd}which     ${color_norm}Query which ${color_term}stratum${color_norm} provides object

${color_term}Strata${color_norm} management commands:
  ${color_cmd}fetch     ${color_norm}${color_term}Fetch${color_norm} new ${color_term}strata${color_norm}
  ${color_cmd}remove    ${color_norm}Remove ${color_term}strata${color_norm} (or ${color_term}aliases${color_norm})
  ${color_cmd}rename    ${color_norm}Rename a ${color_term}stratum${color_norm}
  ${color_cmd}copy      ${color_norm}Copy a ${color_term}stratum${color_norm}

${color_term}Strata${color_norm} status management commands:
  ${color_cmd}status    ${color_norm}Query ${color_term}stratum${color_norm} status
  ${color_cmd}enable    ${color_norm}${color_term}Enable${color_norm} ${color_term}strata${color_norm}
  ${color_cmd}disable   ${color_norm}${color_term}Disable${color_norm} ${color_term}strata${color_norm}
  ${color_cmd}repair    ${color_norm}Repairs ${color_term}broken${color_norm} ${color_term}strata${color_norm}

${color_term}Strata${color_norm} visibility management commands:
  ${color_cmd}hide      ${color_norm}${color_term}Hide${color_norm} ${color_term}strata${color_norm}
  ${color_cmd}show      ${color_norm}${color_term}Show${color_norm} ${color_term}strata${color_norm}

${color_term}Alias${color_norm} management commands:
  ${color_cmd}alias     ${color_norm}Create a ${color_term}stratum${color_norm} ${color_term}alias${color_norm}
  ${color_cmd}deref     ${color_norm}Dereference ${color_term}stratum${color_norm} ${color_term}aliases${color_norm}

Miscellaneous commands:
  ${color_cmd}apply     ${color_norm}Apply configuration changes
  ${color_cmd}update    ${color_norm}Update ${color_bedrock}Bedrock Linux${color_norm} system
  ${color_cmd}version   ${color_norm}Query ${color_bedrock}Bedrock Linux${color_norm} version
  ${color_cmd}report    ${color_norm}Generate report
  ${color_cmd}tutorial  ${color_norm}Run interactive ${color_bedrock}Bedrock Linux${color_norm} tutorial

See ${color_cmd}\`brl ${color_sub}<command>${color_cmd} --help\`${color_norm} for further details per command.
"
}

args="$1"

while [ $# -gt 1 ]; do case "${args:-}" in
	"strat" | "list" | "which" | "fetch" | "remove" | "rename" | "copy" | "status" | "enable" | "disable" | "repair" | "hide" | "show" | "alias" | "deref" | "apply" | "update" | "version" | "report" | "tutorial")
		backend="/bedrock/libexec/$filename-$args"
		shift 1
		exec "/bedrock/libexec/$filename-$args" "$backend" "$@" || die 1 "$filename has been unable to process $*"
	;;
	"-h" | "--help" | "help" | "")
		print_help
		exit 0
	;;
	*)
		printf_help
		die 2 "Unknown argument has been parsed in $filename - $args"
esac; done
